pragma ever-solidity 0.64.0;

pragma AbiHeader time;
pragma AbiHeader expire;
pragma AbiHeader pubkey;

import "@broxus/contracts/contracts/libraries/MsgFlag.tsol";

import "./structures/IOrderFeeParams.tsol";

contract OrderRootPlatform is IOrderFeeParams {
	address static factory;
	address static spentToken;
	TvmCell static params;

	constructor(
		uint32 version,
		uint32 versionOrder,
		TvmCell code,
		TvmCell orderCode,
		address sendGasTo,
		OrderFeeParams fee,
		TvmCell _customParams
	) public {
		if (msg.sender == factory) {
			initialize(version, versionOrder, code, orderCode, sendGasTo, fee, _customParams);
		} else {
			sendGasTo.transfer({
				value: 0,
				flag: MsgFlag.ALL_NOT_RESERVED + MsgFlag.DESTROY_IF_ZERO,
				bounce: false
			});
		}
	}

	function initialize(
		uint32 version,
		uint32 versionOrder,
		TvmCell code,
		TvmCell orderCode,
		address sendGasTo,
		OrderFeeParams fee,
		TvmCell customParams
	) private {
		TvmCell data = abi.encode(
			factory, spentToken, address(0), uint32(0), version, versionOrder,
			sendGasTo, fee, orderCode, params, customParams
		);

		tvm.setcode(code);
		tvm.setCurrentCode(code);

		onCodeUpgrade(data);
	}

	function onCodeUpgrade(TvmCell data) private {}
}
